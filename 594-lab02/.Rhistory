library(tm)
library(twitteR)
library(RColorBrewer)
library(wordcloud)
installr: install.packages("installr")
install.packages("installr")
library(installr)
updateR()
updateR()
install.packages(c("ggplot2", "tm", "wordcloud", "RColorBrewer", "twitteR"))
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
directory(C:\Users\jesse\Riles\594-lab02)
directory("C:\Users\jesse\Riles\594-lab02")
directory(C:/Users/jesse/Riles/594-lab02)
setwd(C:/Users/jesse/Riles/594-lab02)
directory(C:Users/jesse/Riles/594-lab02)
setwd(C:Users/jesse/Riles/594-lab02)
# Jessica Embury
# 594 Lab 2
# San Diego County Melanoma Dataset
#### load required libraries
library(ggplot2)
### Read csv data into R dataframe
melanoma_data <- read.csv("Melanoma.csv")
### list all the field names (Variables in the dataset)
names(melanoma_data)
### Subset data by specific column
## subset only the year 2017
data_2017 <- melanoma_data[melanoma_data$Year == 2017,]
### Generate some statistics
### aggregate by region names, make pie chart showing total cases by region
totals_region <- aggregate(data_2017[, c("Total")], by=list(Region = data_2017$Region), FUN=sum, na.rm=TRUE)
colnames(totals_region)[2]  <- "Total"
print(totals_region)
### Make a visual plot ! aes: aesthetic mappings, geom_bar: rectangle bars
totals_bar <- ggplot(totals_region, aes(x=totals_region$Region,y=totals_region$Total)) + geom_bar(stat="identity",aes(fill= factor(totals_region$Region)), width=0.5) +
ggtitle("Melanoma in San Diego by Regions (Total Cases)")+
ylab("Total Cases") +
xlab("Regions of San Deigo") +
theme(legend.position="right") +
theme(axis.text.x = element_text(angle=70, vjust=1, hjust=1))+
list()
## show the plot & save it to file
totals_bar
ggsave("Melanoma_Totals_barchart.png", width = 12, height = 6)
#pie chart of totals - first make barplot then convert to pie
# Barplot
barplot <- ggplot(totals_region, aes(x=" ", y=Total, fill=Region))+
geom_bar(width = 1, stat = "identity")
barplot
#pie formatting
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
#Convert to pie
totals_pie <- barplot + coord_polar("y", start=0) + theme_minimal() + blank_theme + ggtitle("Melanoma in San Diego by Regions (Total Cases)")
totals_pie
#save
ggsave("Melanoma_Totals_piechart.png", width = 12, height = 6)
# Jessica Embury
# 594 Lab 2
# San Diego County Melanoma Dataset
#set dir
setwd("C:/Users/jesse/Rfiles/594-lab02")
#### load required libraries
library(ggplot2)
### Read csv data into R dataframe
melanoma_data <- read.csv("Melanoma.csv")
### list all the field names (Variables in the dataset)
names(melanoma_data)
### Subset data by specific column
## subset only the year 2017
data_2017 <- melanoma_data[melanoma_data$Year == 2017,]
### Generate some statistics
### aggregate by region names, make pie chart showing total cases by region
totals_region <- aggregate(data_2017[, c("Total")], by=list(Region = data_2017$Region), FUN=sum, na.rm=TRUE)
colnames(totals_region)[2]  <- "Total"
print(totals_region)
### Make a visual plot ! aes: aesthetic mappings, geom_bar: rectangle bars
totals_bar <- ggplot(totals_region, aes(x=totals_region$Region,y=totals_region$Total)) + geom_bar(stat="identity",aes(fill= factor(totals_region$Region)), width=0.5) +
ggtitle("Melanoma in San Diego by Regions (Total Cases)")+
ylab("Total Cases") +
xlab("Regions of San Deigo") +
theme(legend.position="right") +
theme(axis.text.x = element_text(angle=70, vjust=1, hjust=1))+
list()
## show the plot & save it to file
totals_bar
ggsave("Melanoma_Totals_barchart.png", width = 12, height = 6)
#pie chart of totals - first make barplot then convert to pie
# Barplot
barplot <- ggplot(totals_region, aes(x=" ", y=Total, fill=Region))+
geom_bar(width = 1, stat = "identity")
barplot
#pie formatting
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
#Convert to pie
totals_pie <- barplot + coord_polar("y", start=0) + theme_minimal() + blank_theme + ggtitle("Melanoma in San Diego by Regions (Total Cases)")
totals_pie
#save
ggsave("Melanoma_Totals_piechart.png", width = 12, height = 6)
# Jessica Embury
# 594 Lab 2
# San Diego County Melanoma Dataset
#set dir
setwd("C:/Users/jesse/Rfiles/594-lab02")
#### load required libraries
library(ggplot2)
### Read csv data into R dataframe
melanoma_data <- read.csv("Melanoma.csv")
### list all the field names (Variables in the dataset)
names(melanoma_data)
### Subset data by specific column
## subset only the year 2017
data_2017 <- melanoma_data[melanoma_data$Year == 2017,]
### Generate some statistics
### aggregate by region names, make pie chart showing total cases by region
totals_region <- aggregate(data_2017[, c("Total")], by=list(Region = data_2017$Region), FUN=sum, na.rm=TRUE)
colnames(totals_region)[2]  <- "Total"
print(totals_region)
### Make a visual plot ! aes: aesthetic mappings, geom_bar: rectangle bars
totals_bar <- ggplot(totals_region, aes(x=Region,y=Total)) + geom_bar(stat="identity",aes(fill= factor(Region)), width=0.5) +
ggtitle("Melanoma in San Diego by Regions (Total Cases)")+
ylab("Total Cases") +
xlab("Regions of San Deigo") +
theme(legend.position="right") +
theme(axis.text.x = element_text(angle=70, vjust=1, hjust=1))+
list()
## show the plot & save it to file
totals_bar
ggsave("Melanoma_Totals_barchart.png", width = 12, height = 6)
#pie chart of totals - first make barplot then convert to pie
# Barplot
barplot <- ggplot(totals_region, aes(x=" ", y=Total, fill=Region))+
geom_bar(width = 1, stat = "identity")
barplot
#pie formatting
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
#Convert to pie
totals_pie <- barplot + coord_polar("y", start=0) + theme_minimal() + blank_theme + ggtitle("Melanoma in San Diego by Regions (Total Cases)")
totals_pie
#save
ggsave("Melanoma_Totals_piechart.png", width = 12, height = 6)
# Jessica Embury
# Lab 2
# Wordcloud from Endangered Species Article
#set dir
setwd("C:/Users/jesse/Rfiles/594-lab02")
#these are the libraries used in the Word Cloud Tasks
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
#Put your text files inside the temp folder(wordcloud) under working directory(D:\webexercise-2)
my_corpus = Corpus(DirSource("wordcloud2"))
#You can add or remove STOPWORDS in the list
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("SDSU", "project", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
# plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# save the image in png format – a PNG image Ming_Cloud.png will be created in the Working Directory
png("WordCloud2.png", width=12, height=8, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# dev.off will save the output PNG file into the working folder
dev.off()
# Jessica Embury
# Lab 2
# Wordcloud from Endangered Species Article
#set dir
setwd("C:/Users/jesse/Rfiles/594-lab02")
#these are the libraries used in the Word Cloud Tasks
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
#Put your text files inside the temp folder(wordcloud) under working directory(D:\webexercise-2)
my_corpus = Corpus(DirSource("wordcloud2"))
#You can add or remove STOPWORDS in the list
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("endangered", "species", "population", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
# plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# save the image in png format – a PNG image Ming_Cloud.png will be created in the Working Directory
png("WordCloud2.png", width=12, height=8, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# dev.off will save the output PNG file into the working folder
dev.off()
# Jessica Embury
# Lab 2
# Wordcloud from Endangered Species Article
#set dir
setwd("C:/Users/jesse/Rfiles/594-lab02")
#these are the libraries used in the Word Cloud Tasks
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
#Put your text files inside the temp folder(wordcloud) under working directory(D:\webexercise-2)
my_corpus = Corpus(DirSource("wordcloud2"))
#You can add or remove STOPWORDS in the list
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("endangered", "species", "population", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
# plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# save the image in png format – a PNG image Ming_Cloud.png will be created in the Working Directory
png("WordCloud2.png", width=12, height=8, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# dev.off will save the output PNG file into the working folder
dev.off()
warnings()
# Jessica Embury
# Lab 2
# Wordcloud from Endangered Species Article
#set dir
setwd("C:/Users/jesse/Rfiles/594-lab02")
#these are the libraries used in the Word Cloud Tasks
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
#Put your text files inside the temp folder(wordcloud) under working directory(D:\webexercise-2)
my_corpus = Corpus(DirSource("wordcloud2"))
#You can add or remove STOPWORDS in the list
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("endangered", "species", "population", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
# plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# save the image in png format – a PNG image Ming_Cloud.png will be created in the Working Directory
png("WordCloud2.png", width=20, height=15, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# dev.off will save the output PNG file into the working folder
dev.off()
# Jessica Embury
# Lab 2
# Wordcloud from Endangered Species Article
#set dir
setwd("C:/Users/jesse/Rfiles/594-lab02")
#these are the libraries used in the Word Cloud Tasks
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
#Put your text files inside the temp folder(wordcloud) under working directory(D:\webexercise-2)
my_corpus = Corpus(DirSource("wordcloud2"))
#You can add or remove STOPWORDS in the list
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("endangered", "species", "population", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
# plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# save the image in png format – a PNG image will be created in the Working Directory
png("WordCloud2.png", width=12, height=8, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# dev.off will save the output PNG file into the working folder
dev.off()
# Jessica Embury
# Lab 2
# Wordcloud from Endangered Species Article
#set dir
setwd("C:/Users/jesse/Rfiles/594-lab02")
#these are the libraries used in the Word Cloud Tasks
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
#Put your text files inside the temp folder(wordcloud) under working directory(D:\webexercise-2)
my_corpus = Corpus(DirSource("wordcloud2"))
#You can add or remove STOPWORDS in the list
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("SDSU", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
# plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# save the image in png format – a PNG image will be created in the Working Directory
png("WordCloud2.png", width=12, height=8, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# dev.off will save the output PNG file into the working folder
dev.off()
# Jessica Embury
# Lab 2
# Wordcloud from Endangered Species Article
#set dir
setwd("C:/Users/jesse/Rfiles/594-lab02")
#these are the libraries used in the Word Cloud Tasks
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
#Put your text files inside the temp folder(wordcloud) under working directory(D:\webexercise-2)
my_corpus = Corpus(DirSource("wordcloud2"))
#You can add or remove STOPWORDS in the list
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("species", "endangered", "population", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
# plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# save the image in png format – a PNG image will be created in the Working Directory
png("WordCloud2.png", width=12, height=8, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# dev.off will save the output PNG file into the working folder
dev.off()
# Jessica Embury
# Lab 2
# Wordcloud from Endangered Species Article
#set dir
setwd("C:/Users/jesse/Rfiles/594-lab02")
#these are the libraries used in the Word Cloud Tasks
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
#Put your text files inside the temp folder(wordcloud) under working directory(D:\webexercise-2)
my_corpus = Corpus(DirSource("wordcloud3"))
#You can add or remove STOPWORDS in the list
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("SDSU", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
# plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# save the image in png format – a PNG image will be created in the Working Directory
png("WordCloud2.png", width=12, height=8, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# dev.off will save the output PNG file into the working folder
dev.off()
#set dir
setwd("C:/Users/jesse/GitProjects/GEOG594-Embury/594-lab02")
#### load required libraries
library(ggplot2)
### Read csv data into R dataframe
melanoma_data <- read.csv("data/Melanoma.csv")
#Put your text files inside the temp folder(wordcloud) under working directory(D:\webexercise-2)
my_corpus = Corpus(DirSource("data/wordcloud2"))
# Jessica Embury
# Lab 2
# Wordcloud from Endangered Species Article
#set dir
setwd("C:/Users/jesse/GitProjects/GEOG594-Embury/594-lab02")
#these are the libraries used in the Word Cloud Tasks
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
#Put your text files inside the temp folder(wordcloud) under working directory(D:\webexercise-2)
my_corpus = Corpus(DirSource("data/wordcloud2"))
